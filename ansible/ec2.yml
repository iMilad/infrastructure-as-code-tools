---

- hosts: localhost
  connection: local
  gather_facts: False
  vars_files:
    - keys.yml

  vars:
    key_name: ansibleKey
    region: us-east-1
    image_id: ami-0915e09cc7ceee3ab
    tag_name: "hello-ansible"
    security_group: "sg_ansible"

  tasks:

    - name: EC2 Info
      block:

        - name: Get instances info - so we can use each time to get info about running instances
          ec2_instance_info:
            aws_access_key: "{{ aws_access_key_id }}"
            aws_secret_key: "{{ aws_secret_access_key }}"
            security_token: "{{ aws_session_token }}"
            region: "{{ region }}"
          register: result

        - name: get Instances info for ec2 provisioned by Ansible, if it is existed.
          debug:
            msg: "ID: {{ item.tags.Name }} - State: {{ item.state.name }} - Public IP: {{ item.public_dns_name }}"
          loop: "{{ result.instances }}"
          when: item.tags.Name == "{{ tag_name }}"

      tags: always


    - name: Provisioning EC2 instance
      block:

        - name: Upload public key to AWS
          ec2_key:
            aws_access_key: "{{ aws_access_key_id }}"
            aws_secret_key: "{{ aws_secret_access_key }}"
            security_token: "{{ aws_session_token }}"
            region: "{{ region }}"
            name: "{{ key_name }}"
            key_material: "{{ lookup('file', '~/.ssh/{{ key_name }}.pub') }}"

        - name: Create security group
          ec2_group:
            aws_access_key: "{{ aws_access_key_id }}"
            aws_secret_key: "{{ aws_secret_access_key }}"
            security_token: "{{ aws_session_token }}" # remove it if you do not have session_token
            region: "{{ region }}"
            name: "{{ security_group }}"
            description: "Ansible SG"
            rules:
              - proto: tcp
                ports:
                  - 22
                cidr_ip: 0.0.0.0/0
                rule_desc: allow all on ssh port, not recommended!
              - proto: tcp
                ports:
                  - 80
                cidr_ip: 0.0.0.0/0
                rule_desc: open port 80 to public for Nginx
            rules_egress:
              - proto: -1
                from_port: 0
                to_port: 0
                cidr_ip: 0.0.0.0/0
                rule_desc: allow all outgoing traffic
          register: security_group_ansible

        - name: Provision EC2 instance
          ec2_instance:
            aws_access_key: "{{ aws_access_key_id }}"
            aws_secret_key: "{{ aws_secret_access_key }}"
            security_token: "{{ aws_session_token }}"
            region: "{{ region }}"
            key_name: "{{ key_name }}"
            security_group: "{{ security_group_ansible.group_id }}"
            image_id: "{{ image_id }}"
            instance_type: t2.micro
            name: "{{ tag_name }}"
          register: ec2

        - name: Add the newly created EC2 IP to host (Ansible cache) for configure_ec2 part
          add_host:
            name: "{{ item.public_dns_name }}"
            groups: nginx
          with_items: "{{ ec2.instances }}"

      tags: ['never', 'create_ec2'] # https://docs.ansible.com/ansible/latest/user_guide/playbooks_tags.html

- hosts: nginx
  become: yes
  remote_user: ec2-user
  become_user: root
  become_method: sudo
  gather_facts: False
  vars_files:
    - keys.yml
  tasks:

    - name: Configure EC2
      block:

        - name: Update all packages
          yum:
            name: '*'
            state: latest
            update_only: yes

        - name: Install docker
          yum:
            name:
              - docker
            state: installed

        - name: docker-py
          shell: pip install docker-py

        - name: Start docker service
          service:
            name: docker
            state: restarted

        - name: Create Ngnix container
          docker_container:
            name: hello
            image: nginx
            state: started
            ports:
              - "80:80"

      tags: ['never', 'configure_ec2']
